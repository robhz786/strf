# Copyright 2016, 2017 Peter Dimov
# Copyright (C) 2017 - 2019 James E. King III
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

#
# Generic Appveyor build script for boostorg repositories
# See: https://github.com/boostorg/boost-ci/
#
# Instructions for customizing this script for your library:
#
# 1. Customize the compilers and language levels you want.
# 2. If you have more than include/, src/, test/, example/, examples/,
#    benchmark/ or tools/ directories, set the environment variable DEPINST.
#    For example if your build uses code in "bench/" and "fog/" directories:
#      - DEPINST: --include bench --include fog
# 3. Enable pull request builds in your boostorg/<library> account.
#
# That's it - the script will do everything else for you.
#

version: 0.15.{build}-{branch}

shallow_clone: true

branches:
  only:
    - main
    - develop
    - /pr-.*/
    - /rc-.*/
    - /appveyor-.*/
#    - /bugfix-.*/
#    - /hotfix-.*/
#    - /feature-.*/
#    - /optimization-.*/
#    - /refactoring-.*/
#    - /redesign-.*/
#    - /task-.*/

build: off

matrix:
  # Adding MAYFAIL to any matrix job allows it to fail but the build stays green:
  allow_failures:
    - MAYFAIL: true

environment:

  matrix:

#################################
#      XCode
#################################

     - FLAVOR: XCode macos-monterey
       APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
       CONFIG: Release
       BUILD_SCRIPT: ci/appveyor/build-xcode.sh

     - FLAVOR: XCode macos-bigsur
       APPVEYOR_BUILD_WORKER_IMAGE: macos-bigsur
       CONFIG: Release
       BUILD_SCRIPT: ci/appveyor/build-xcode.sh

     - FLAVOR: XCode macos-catalina
       APPVEYOR_BUILD_WORKER_IMAGE: macos-catalina
       CONFIG: Release
       BUILD_SCRIPT: ci/appveyor/build-xcode.sh

#################################
#      GCC / Ubuntu
#################################

     - FLAVOR: G++7 Release
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
       ARCH: x64
       CONFIG: Release
       CXX: g++-7
       CC: gcc-7
       BUILD_SCRIPT: ci/appveyor/build.sh

     - FLAVOR: G++8 Release
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
       ARCH: x64
       CONFIG: Release
       CXX: g++-8
       CC: gcc-8
       BUILD_SCRIPT: ci/appveyor/build.sh

     - FLAVOR: G++9 Release
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
       ARCH: x64
       CONFIG: Release
       CXX: g++-9
       CC: gcc-9
       BUILD_SCRIPT: ci/appveyor/build.sh

     - FLAVOR: G++10 Release
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
       ARCH: x64
       CONFIG: Release
       CXX: g++-10
       CC: gcc-10
       BUILD_SCRIPT: ci/appveyor/build.sh

     - FLAVOR: G++11 Release
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
       ARCH: x64
       CONFIG: Release
       CXX: g++-11
       CC: gcc-11
       BUILD_SCRIPT: ci/appveyor/build.sh

     - FLAVOR: Ubsan
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
       ARCH: x64
       CXX_STANDARD: 20
       BUILD_SCRIPT: ci/appveyor/ubsan_build.sh

#################################
#      Clang on Ubuntu
#################################

     - FLAVOR: Clang 9
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-9
       CC: clang-9
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

     - FLAVOR: Clang 10
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-10
       CC: clang-10
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

     - FLAVOR: Clang 11
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-11
       CC: clang-11
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

     - FLAVOR: Clang 12
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-12
       CC: clang-12
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

     - FLAVOR: Clang 13
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-13
       CC: clang-13
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

     - FLAVOR: Clang 14
       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
       ARCH: x64
       CONFIG: Release
       CXX: clang-14
       CC: clang-14
       LDFLAGS: "-lstdc++ -lm"
       BUILD_SCRIPT: ci/appveyor/build-clang.sh

#     - FLAVOR: Clang 15
#       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
#       ARCH: x64
#       CONFIG: Release
#       CXX: clang-15
#       CC: clang-15
#       CXXFLAGS: "-I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11/"
#       LDFLAGS: "-L/usr/lib/x86_64-linux-gnu/ -lstdc++ -lm"
#       BUILD_SCRIPT: ci/appveyor/build-clang.sh
#
#     - FLAVOR: Clang 16
#       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
#       ARCH: x64
#       CONFIG: Release
#       CXX: clang-16
#       CC: clang-16
#       CXXFLAGS: "-I/usr/include/c++/11"
#       LDFLAGS: "-stdlib=libstdc++ -I/usr/include/x86_64-linux-gnu/c++/11/"
#       BUILD_SCRIPT: ci/appveyor/build-clang.sh
#
#     - FLAVOR: Clang 17
#       APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
#       ARCH: x64
#       CONFIG: Release
#       CXX: clang-17
#       CC: clang-17
#       CXXFLAGS: "-stdlib=libstdc++ -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11/"
#       LDFLAGS: "-L/usr/lib/x86_64-linux-gnu/ -lstdc++ -lm"
#       BUILD_SCRIPT: ci/appveyor/build-clang.sh

#################################
#      VISUAL STUDIO
#################################

     - FLAVOR: Visual Studio 2017 C++14 (Default)
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
       GENERATOR: Visual Studio 15 2017
       ARCH: x64
       CONFIG: Release
       CXX_STANDARD: 14

     - FLAVOR: Visual Studio 2017 C++14
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
       GENERATOR: Visual Studio 15 2017
       ARCH: x64
       CONFIG: Release
       CXX_STANDARD: 17

     - FLAVOR: Visual Studio 2017 C++2a
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
       GENERATOR: Visual Studio 15 2017
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 20

     - FLAVOR: Visual Studio 2017 C++2a
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
       GENERATOR: Visual Studio 15 2017
       ARCH: x64
       CONFIG: Release
       CXX_STANDARD: 20


     - FLAVOR: Visual Studio 2019 C++14
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
       GENERATOR: Visual Studio 16 2019
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 14

     - FLAVOR: Visual Studio 2019 C++17
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
       GENERATOR: Visual Studio 16 2019
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 17

     - FLAVOR: Visual Studio 2019 C++2a
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
       GENERATOR: Visual Studio 16 2019
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 20

     - FLAVOR: Visual Studio 2019 C++2a
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
       GENERATOR: Visual Studio 16 2019
       ARCH: x64
       CONFIG: Release
       CXX_STANDARD: 20

     - FLAVOR: Visual Studio 2022 C++17
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
       GENERATOR: Visual Studio 17 2022
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 17

     - FLAVOR: Visual Studio 2022 C++20
       APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
       GENERATOR: Visual Studio 17 2022
       ARCH: x64
       CONFIG: Debug
       CXX_STANDARD: 20

build_script:
  - cmd: ci\appveyor\build.bat
  - sh: chmod +x $BUILD_SCRIPT
  - sh: ls -l $BUILD_SCRIPT
  - sh: ./$BUILD_SCRIPT

test_script:
  - cmd: ctest -V -C %CONFIG%
